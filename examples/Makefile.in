# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.6 2022/03/28 15:09:54 cvsuser Exp $
# example services Makefile
#
#
# Copyright (c) 2020 - 2022, Adam Young.
# All rights reserved.
#
# The applications are free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, version 3.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The applications are distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

C=		.c
E=
O=		.o
H=		.h

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
CXX=		@CXX@
ifeq ("$(CXX)","")
CXX=		$(CC)
endif
RM=		@RM@
RMDIR=		@RMDIR@
CP=		@CP@
RC=		@RC@
PERL=		@PERL@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/objects@TOOLCHAINEXT@/$(BUILD_TYPE)/examples
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
CWARN=		@CWARN@
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
CXXFLAGS=	@CXXFLAGS@
CXXDEBUG=	@CXXDEBUG@
ifeq ("$(CXXDEBUG)","")
CXXDEBUG=	$(CDEBUG)
endif
CXXRELEASE=	@CXXRELEASE@
ifeq ("$(CXXRELEASE)","")
CXXRELEASE=	$(CRELEASE)
endif
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I. -I$(D_INC) @CINCLUDE@
CEXTRA=		@DEFS@ -DWIN32_SOCKET_MAP_NATIVE

CEXTRA+=	-DASIO_STANDALONE

ifneq ("$(wildcard ../libcertstore/*.hpp)","")
CEXTRA+=	-DHAVE_LIBCERTSTORE
CINCLUDE+=	-I../libcertstore
endif

ifeq ("$(OPENSSL)","")
OPENSSL		=../../vcpkg/installed/x86-windows
ifeq ("$(wildcard $(OPENSSL)/*)","")
OPENSSL		=../vcpkg/installed/x86-windows
ifeq ("$(wildcard $(OPENSSL)/*)","")
OPENSSL		=
endif
endif
endif

ifneq ("$(OPENSSL)","")
CEXTRA+=	-DHAVE_OPENSSL
CINCLUDE+=	-I$(OPENSSL)/include
ifeq ("$(BUILD_TYPE)","debug")
OPENSSL_LIB=	$(OPENSSL)/debug/lib
OPENSSL_BIN=	$(OPENSSL)/debug/bin
else
OPENSSL_LIB=	$(OPENSSL)/lib
OPENSSL_BIN=	$(OPENSSL)/bin
endif
OPENSSL_DLLS=	$(notdir $(wildcard $(OPENSSL_BIN)/*.dll))
LINKLIBS+=	/LIBPATH:$(OPENSSL_LIB)
endif

CINCLUDE+=	-I../references/Simple-WebSocket-Server
CINCLUDE+=	-I../references/asio-standalone/asio/include

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXRELEASE) $(CWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXDEBUG) $(CWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(D_LIB) $(LINKLIBS) @LIBS@ @EXTRALIBS@

ARFLAGS=	rcv
YFLAGS=		-d
RMFLAGS=	-f


#########################################################################################
# Targets

TARGETS=	\
	$(D_BIN)/example$(E)		\
	$(D_BIN)/ws_client$(E)		\
	$(D_BIN)/ws_service$(E)

IMPORT=
ifneq ("$(OPENSSL_DLLS)","")
IMPORT=		$(addprefix $(D_BIN)/,$(OPENSSL_DLLS))
endif

XCLEAN=


#########################################################################################
# Rules

.PHONY:			build
build:		directories $(TARGETS) import

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

directories:	$(D_OBJ)/.created

$(D_OBJ)/.created:
		-@mkdir $(D_OBJ)
		@echo "do not delete" > $@

.PHONY:			import
import:				$(IMPORT)

.PHONY:		clean
clean:
		-@$(RM) $(RMFLAGS) $(BAK) $(TARGETS) $(OBJS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1

.PHONY:		vclean
vclean:		clean
		-$(RM) $(IMPORT) >nul 2>&1


#########################################################################################
# Applications

$(D_BIN)/%$(E):			MAPFILE=$(basename $@).map
$(D_BIN)/%$(E):			LINKLIBS+=-linetd -lsthread -lcompat
$(D_BIN)/%$(E):			$(D_OBJ)/%$(O)
		$(CC) $(LDFLAGS) -o $@ $< $(LDLIBS) @LDMAPFILE@


#########################################################################################
# Resources

$(D_OBJ)/%$(O):		%$(C)
		$(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%$(O):		%.cpp
		$(CXX) $(CXXFLAGS) -o $@ -c $<

$(D_OBJ)/%.res:		%.rc
		$(RC) -nologo -Fo$@ -I../include -I../libNTService $<

ifneq ("$(OPENSSL_DLLS)","")
$(D_BIN)/%.dll:		$(OPENSSL_BIN)/%.dll
		@echo importing $@ ..
		@$(CP) $^ $@
endif

#end
