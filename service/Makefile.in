# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.9 2022/06/05 11:08:43 cvsuser Exp $
# inetd_service Makefile
#
#
# Copyright (c) 2020 - 2022, Adam Young.
# All rights reserved.
#
# The applications are free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, version 3.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The applications are distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

C=		.c
E=
O=		.o
H=		.h

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
CXX=		@CXX@
ifeq ("$(CXX)","")
CXX=		$(CC)
endif
RM=		@RM@
RC=		@RC@
PERL=		@PERL@
LIBTOOL=	@LIBTOOL@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

include ../libmaxminddb.inc

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/objects@TOOLCHAINEXT@/$(BUILD_TYPE)/inetd_service
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
CWARN=		@CWARN@
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
CXXFLAGS=	@CXXFLAGS@
CXXDEBUG=	$(filter-out -d2i, @CXXDEBUG@)
ifeq ("$(CXXDEBUG)","")
CXXDEBUG=	$(CDEBUG)
endif
CXXRELEASE=	@CXXRELEASE@
ifeq ("$(CXXRELEASE)","")
CXXRELEASE=	$(CRELEASE)
endif
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I. -I$(D_INC) @CINCLUDE@ $(INCMAXMINDDB)
CEXTRA=		@DEFS@ $(DEFMAXMINDDB) -DLIBW32_DYNAMIC

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXRELEASE) $(CXXWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXDEBUG) $(CXXWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(D_LIB) $(LINKLIBS) @LIBS@ @EXTRALIBS@ $(LIBMAXMINDDB)

ARFLAGS=	rcv
YFLAGS=		-d
RMFLAGS=	-f


#########################################################################################
# Targets

TARGET=		inetd_service$(E)

CINCLUDE+=	-I../libService
VPATH+=		../libService
VPATH+=		../libNTService

CPPSOURCES=\
	main.cpp\
	Service.cpp\
	ServiceDiags.cpp\
	ServiceDiagsSyslog.cpp\
	NTService.cpp\
	NTServiceReg.cpp\
	NTServiceConfig.cpp\
	NTServiceControl.cpp\
	Logger.cpp\
	SimpleConfig.cpp

RESOURCES=\
	Service.rc\
	NTServMsg.rc

OBJS+=		$(addprefix $(D_OBJ)/,$(subst .cpp,$(O),$(CPPSOURCES)))
OBJS+=		$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(CSOURCES)))
ifeq (mingw,$(findstring mingw,"@TOOLCHAIN@"))
OBJS+=		$(addprefix $(D_OBJ)/,$(subst .rc,_res.o,$(RESOURCES)))
else
OBJS+=		$(addprefix $(D_OBJ)/,$(subst .rc,.res,$(RESOURCES)))
endif

XCLEAN=		service_license.h bsd_license.h inetd_usage.h


#########################################################################################
# Rules

.PHONY:			build resources release debug
build:		resources $(D_BIN)/$(TARGET)

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

resources:		service_license.h bsd_license.h inetd_usage.h

service_license.h:	../LICENSE mklicense.pl
		@$(PERL) mklicense.pl $< $@ service_license

bsd_license.h:		bsd_license.txt mklicense.pl
		@$(PERL) mklicense.pl $< $@ bsd_license

inetd_usage.h:		../libinetd/inetd.txt mklicense.pl
		@$(PERL) mklicense.pl $< $@ inetd_usage

$(D_BIN)/$(TARGET):	MAPFILE=$(basename $@).map
$(D_BIN)/$(TARGET):	LINKLIBS=-linetd -liptable -lsthread -lsyslog -lutil -lcompat
$(D_BIN)/$(TARGET):	$(D_OBJ)/.created $(OBJS) $(RESOURCES)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS) @LDMAPFILE@

$(D_OBJ)/.created:
		-@mkdir $(D_OBJ)
		@echo "do not delete" > $@

clean:
		-@$(RM) $(RMFLAGS) $(BAK) $(D_BIN)/$(TARGET) $(TARGET) $(OBJS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1

$(D_OBJ)/%$(O):		%$(C)
		$(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%$(O):		%.cpp
		$(CXX) $(CXXFLAGS) -o $@ -c $<

$(D_OBJ)/%.res:		%.rc
		$(RC) -I../include -fo $@ $<

$(D_OBJ)/%_res.o:	%.rc
		$(RC) -I../include -o $@ $<

#end
